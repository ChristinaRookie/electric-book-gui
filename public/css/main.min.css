.sg-section-header{text-transform:uppercase;font-weight:400}.sg-header{text-align:right;border-bottom:1px solid #71b8aa;background-color:#f7f7f7;padding:.25em}.sg-item,.swatch{margin-bottom:1em}.swatch{display:inline-block;margin-right:1em;border-radius:.25em;text-align:center;padding:2em;color:#fff}.swatch-primary{background-color:#009e7f}.swatch-grey{background-color:#ddd;color:#333}.swatch-off-grey{background-color:#71b8aa}.swatch-dark-grey{background-color:#666}.sg-note{padding:.25em .5em;background:#ddd}.sg-note:before{content:"Note: ";font-weight:700}

/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}

/*! HTML5 Boilerplate v5.3.0 | MIT License | https://html5boilerplate.com/ */html{color:#222;font-size:1em;line-height:1.4}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0;padding:0}audio,canvas,iframe,img,svg,video{vertical-align:middle}textarea{resize:vertical}.hidden{display:none!important}.visuallyhidden{border:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.visuallyhidden.focusable:active,.visuallyhidden.focusable:focus{clip:auto;-webkit-clip-path:none;clip-path:none;height:auto;margin:0;overflow:visible;position:static;width:auto;white-space:inherit}.invisible{visibility:hidden}.clearfix:after,.clearfix:before{content:" ";display:table}.clearfix:after{clear:both}@media print{*,:after,:before,blockquote:first-letter,blockquote:first-line,div:first-letter,div:first-line,li:first-letter,li:first-line,p:first-letter,p:first-line{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}a[href^="#"]:after,a[href^="javascript:"]:after{content:""}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}body{font-family:Source Sans Pro,sans-serif;color:#444}h1,h2,h3,h4,h5,h6,p{margin-top:0}@media (min-width:43.75em){html{line-height:1.375}}h1{font-size:2em;line-height:1.25}@media (min-width:43.75em){h1{font-size:2.5em;line-height:1.125}}@media (min-width:56.25em){h1{font-size:3em;line-height:1.05}}h2{font-size:1.625em;line-height:1.15384615}@media (min-width:43.75em){h2{font-size:2em;line-height:1.25}}@media (min-width:56.25em){h2{font-size:2.25em;line-height:1.25}}h3{font-size:1.375em;line-height:1.13636364}@media (min-width:43.75em){h3{font-size:1.5em;line-height:1.25}}@media (min-width:56.25em){h3{font-size:1.75em;line-height:1.25}}.repo-details h3,h4{font-size:1.125em;line-height:1.11111111}@media (min-width:43.75em){.repo-details h3,h4{line-height:1.22222222}}blockquote{font-size:1.25em;line-height:1.25}@media (min-width:43.75em){blockquote{font-size:1.5em;line-height:1.45833333}}a{color:#009e7f}.logo,a:hover{text-decoration:none}.logo img{width:2em;height:2em;margin-right:.5em}button,input,textarea{padding:.25em .5em;font-family:Source Sans Pro,sans-serif;border:1px solid #71b8aa}[type=checkbox],[type=radio]{margin-right:.5em}input,select,textarea{margin-left:.5em}.btn,.cta,[type=submit],button{background-color:#009e7f;color:#fff;display:inline-block;text-decoration:none;padding:.5em 1em;border-radius:.25em;border-top:0;border-right:0;border-left:0;border-bottom:.15em solid #006b56}.btn[disabled],.cta[disabled],[type=submit][disabled],button[disabled]{border:none;background-color:#71b8aa;cursor:default}.btn:hover,.cta:hover,[type=submit]:hover,button:hover{background-color:#00d1a8;border-bottom:.15em solid transparent;cursor:pointer}.btn-wide,.input-wide,.label-wide{display:block}.input-wide{width:calc(100% - 1em);margin-left:0}.label-wide{margin-bottom:.5em}.label-wide+input{margin-left:0}.commit-message{width:40em;max-width:95%;max-width:calc(100% - 1em)}.btn-secondary{background-color:#666;border-bottom:.15em solid #4d4d4d}.btn-secondary:hover{background:#999}.btn-alt{background-color:#fff;color:#009e7f;display:inline-block;text-decoration:none;padding:.5em 1em;border-radius:.25em;border-top:0;border-right:0;border-left:0;border-bottom:.15em solid #ccc}.btn-alt:hover{background-color:#e6e6e6;border-bottom:.15em solid transparent}@media (min-width:38em){.pull-request{display:flex;justify-content:space-between}}.pull-request .action{flex-direction:column;justify-content:flex-end}.form-search{display:flex;align-items:center;max-width:38em}[type=search]{margin-right:1em;flex-grow:1}fieldset{padding:.5em .75em}legend{padding:0 .25em}[role=banner],[role=contentinfo]{background:#009e7f;color:#fff;padding:1em}[role=banner] a,[role=contentinfo] a{color:#fff}@media (min-width:50em){[role=banner]{display:flex;justify-content:space-between}}[role=banner] p{margin-bottom:0}.nav-main{list-style:none;margin:0;padding:0;margin-bottom:1em}@media (min-width:50em){.nav-main{margin-bottom:0}}.nav-main li{display:inline-block}.logo{margin-right:1em}.gravatar{width:1.5em;height:1.5em;display:inline-block;margin:0 .5em}main{padding:1em}[role=contentinfo]{background:#009e7f;color:#fff;text-align:center;padding:1em}.form-fork [type=text]{width:30em}img{border-width:0;vertical-align:middle;-ms-interpolation-mode:bicubic;max-width:100%;height:auto}.l-center{text-align:center}.action-group{border:0}.action-group ul{list-style:none;padding-left:0;margin-top:0}.action-group-inline legend{display:inline-block}.action-group-inline li{display:inline-block;padding:.25em .5em}.action-group-inline li:first-child{padding-left:0}.action-group-inline li:last-child{padding-right:0}.action-group-main{text-align:right}.action-group-general{text-align:center}.action-group-block li{padding:.5em}section{padding:2em 0;border-top:3px solid #71b8aa}section :last-child{margin-bottom:0}.pagination a{padding:0 .25em;margin:0 .25em}@media (min-width:38em){article{padding-left:10%;padding-right:10%}}@media (min-width:50em){article{padding-left:15%;padding-right:15%}}@media (min-width:64em){article{padding-left:20%;padding-right:20%}}@media (min-width:38em){.section-editor{padding-left:5%;padding-right:5%}}@media (min-width:50em){.section-editor{padding-left:10%;padding-right:10%}}@media (min-width:64em){.section-editor{padding-left:15%;padding-right:15%}}.editor{border:1px solid #71b8aa;padding:.25em .5em;margin:1em 0}@media (min-width:38em){.header-split{display:flex;justify-content:space-between}.header-split h2{margin-bottom:0}}.repo-list{padding-left:0;list-style:none;margin-top:0;margin-bottom:3em;position:relative;display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-between;align-items:flex-start}.repo-list a.repo-title{display:block;font-weight:700;margin-bottom:0;overflow-wrap:break-word;word-wrap:break-word;word-break:break-all;text-overflow:fade;max-width:100%;text-decoration:none}.repo-list .repo{width:30%;margin-right:5%;display:flex;flex-direction:column;align-items:stretch;justify-content:space-between;padding:1em}.repo-list .repo:nth-child(3n){margin-right:0}@supports (display:grid){.repo-list{display:grid;grid-template-columns:repeat(3,1fr);grid-gap:1em;align-items:stretch}.repo-list .repo{width:auto;border:1px solid #333;word-break:auto;margin-right:0}}.pull-requests{padding-left:4em}.ebm-repos,.pull-requests ul{padding-left:0;list-style:none}.ebm-repos{max-width:64em;margin:0 auto}.ebm-repos h2{margin-bottom:0}.ebm-repos h2 a,.ebm-repos h3 a{text-decoration:none}.ebm-pull-requests{padding-left:0;list-style:none}.ebm-pull-request section,.ebm-repos section{border-top:0}.ebm-pull-request section:nth-of-type(2),.ebm-repos section:nth-of-type(2){padding-top:0}.ebm-repo{border-bottom:3px solid #71b8aa}.ebm-repo:first-child{border-top:3px solid #71b8aa}.ebm-pull-request{padding:1em 0;border-top:1px solid #ddd}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
